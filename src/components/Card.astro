---
import type { Tool } from "../models/tool.model";
import { getColorFromCategory } from "../utils/getColorFromCategory";
import Icon from "./Icon.astro";

interface Props {
  tool: Tool;
}

const { tool } = Astro.props;
const { description, name, author, category, tags, url } = tool;

const color = getColorFromCategory(category);
---

<a
  href={url}
  target="_blank"
  class:list={[
    "group h-card text-left text-white [perspective:1000px]",
    description.length < 70 && name.length < 11 && tags.length < 4
      ? "w-card "
      : "w-longerCard",
  ]}
>
  <div
    class:list={[
      "myChild relative h-full w-full rounded-xl transition-transform duration-500 [transform-style:preserve-3d] group-hover:[transform:rotateY(-180deg)]",
      color,
    ]}
  >
    <div
      class="absolute flex h-full w-full flex-col items-start justify-between p-4 [backface-visibility:hidden] [transform:rotateY(0deg)]"
    >
      <Icon category={category} />
      <div>
        <h3 class="text-2xl font-bold">{name}</h3>
        <h4 class="text-xs font-normal">by: {author}</h4>
      </div>
    </div>
    <div
      aria-label="Card Back"
      class="absolute flex h-full w-full flex-col justify-between overflow-hidden p-4 [backface-visibility:hidden] [transform:rotateY(180deg)]"
    >
      <p class="flex-grow hyphens-auto">
        {description}
      </p>
      <div class="flex flex-row flex-wrap justify-start gap-2">
        {
          tags.map((tag) => (
            <p class=" rounded-md bg-base-100 bg-opacity-50 px-[6px] pb-px pt-[2px] text-sm">
              {tag}
            </p>
          ))
        }
      </div>
    </div>
  </div>
</a>
