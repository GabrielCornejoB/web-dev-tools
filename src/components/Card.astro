---
import type { Tool } from "../models/tool.model";
import Icon from "./Icon.astro";

interface Props {
  tool: Tool;
}

const { tool } = Astro.props;
const { description, name, author, category, tags, url } = tool;

const getColorFromCategory = () => {
  switch (category) {
    case "icons":
      return "bg-rose-500";
    case "illustrations":
      return "bg-green-500";
    case "colors":
      return "bg-indigo-500";
    case "generators":
      return "bg-orange-500";
    case "fonts":
      return "bg-yellow-500";
    case "libraries":
      return "bg-sky-500";
    case "other":
      return "bg-fuchsia-500";
  }
};
const color = getColorFromCategory();
---

<div
  class:list={[
    "h-card hover:w-longerCard group text-white transition-all [perspective:1000px]",
    name.length < 9 ? "w-card" : "w-longerCard",
  ]}
>
  <div
    class:list={[
      "relative h-full w-full rounded-xl transition-transform duration-1000 [transform-style:preserve-3d] group-hover:[transform:rotateY(-180deg)]",
      color,
    ]}
  >
    <div
      class="absolute flex h-full w-full flex-col items-start justify-between p-4 [backface-visibility:hidden] [transform:rotateY(0deg)]"
    >
      <Icon category={category} />
      <div>
        <h3 class="text-2xl font-bold">{name}</h3>
        <h4 class="text-xs font-normal">@{author}</h4>
      </div>
    </div>
    <div
      aria-label="Card Back"
      class="absolute flex h-full w-full flex-col justify-between p-4 [backface-visibility:hidden] [transform:rotateY(180deg)]"
    >
      <p class="hyphens-auto">{description}</p>
      <div class="flex flex-row gap-3">
        {
          tags.map((tag) => (
            <span class="rounded-md bg-base-100 bg-opacity-50 px-[6px] pb-px pt-[2px] text-sm">
              {tag}
            </span>
          ))
        }
      </div>
    </div>
  </div>
</div>
