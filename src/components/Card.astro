---
import type { Tool } from "../models/tool.model";

interface Props {
  tool: Tool;
}

const { tool } = Astro.props;
const { description, imageURL, name, author, category, tags, url } = tool;

const getColorFromCategory = () => {
  switch (category) {
    case "icons":
      return "bg-rose-500";
    case "illustrations":
      return "bg-green-500";
    case "react":
      return "bg-sky-500";
    case "colors":
      return "bg-indigo-500";
    case "generators":
      return "bg-orange-500";
    case "fonts":
      return "bg-slate-500";
    case "libraries":
      return "bg-yellow-500";
  }
};
const color = getColorFromCategory();
---

<div
  class:list={[
    "group relative mb-[10px] flex w-72 flex-col rounded-2xl text-white transition-colors",
    color,
    description.length <= 35
      ? "row-end-sm"
      : description.length <= 75
      ? "row-end-md"
      : "row-end-lg",
  ]}
>
  <header class="flex w-full flex-row p-4">
    <div
      class:list={[
        "mr-4 grid h-14 w-14 place-items-center rounded-lg bg-base-100",
      ]}
    >
      <img
        src={imageURL}
        alt={name}
        width="50"
        height="50"
        class="rounded-md"
      />
    </div>
    <div class="flex flex-col justify-center">
      <span class="text-2xl font-bold">{name}</span>
      <span class="text-sm font-normal">@{author}</span>
    </div>
  </header>
  <div class="flex flex-grow flex-col px-4">
    <p class="hyphens-auto text-left text-sm font-normal">{description}</p>
    <div class="flex w-full flex-grow flex-row items-end gap-3 pb-4">
      {
        tags.map((tag) => (
          <div class="rounded-lg bg-base-100 bg-opacity-50 px-2 pt-px text-sm capitalize">
            {tag}
          </div>
        ))
      }
    </div>
  </div>
</div>
