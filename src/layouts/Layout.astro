---
import { ViewTransitions } from "astro:transitions";
import { links } from "../data/nav-links";
import type { Link } from "../models/link.model";
import Navbar from "../components/Navbar.astro";
import Drawer from "../components/Drawer.astro";
import Aside from "../components/Aside.astro";
import NavButtons from "../components/NavButtons.astro";

const { title } = Astro.props;
const pathName = new URL(Astro.request.url).pathname;
const activeLink: Link =
  links.find((link) => link.path == pathName) || links[0];
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body class="text-content w-full">
    <div class="drawer drawer-end">
      <input type="checkbox" id="main-drawer" class="drawer-toggle" />

      <!-- MAIN APP CONTENT -->
      <div
        class="drawer-content flex h-screen w-screen flex-col overflow-hidden"
      >
        <Navbar links={links} />
        <div class="app-layout w-full flex-grow justify-start">
          <Aside link={activeLink} />
          <main
            class="content-height flex-grow overflow-y-scroll [grid-area:content]"
          >
            <slot />
          </main>
          <NavButtons activeLink={activeLink} />
        </div>
      </div>
      <!-- END OFF MAIN APP CONTENT -->

      <Drawer links={links} />
    </div>

    <style>
      .app-layout {
        display: flex;
        flex-direction: column;
      }
      /* .content-height {
        height: calc(100vh - 80px);
      } */
      @media (min-width: 1075px) {
        .app-layout {
          display: grid;

          grid-template-areas:
            "content aside"
            "content buttons";
          grid-template-columns: 1fr 400px;
          grid-template-rows: 1fr 200px;
        }
        .content-height {
          height: calc(100vh - 80px);
        }
      }
    </style>
  </body>
</html>
